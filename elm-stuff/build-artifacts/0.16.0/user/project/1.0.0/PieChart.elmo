Elm.PieChart = Elm.PieChart || {};
Elm.PieChart.make = function (_elm) {
   "use strict";
   _elm.PieChart = _elm.PieChart || {};
   if (_elm.PieChart.values) return _elm.PieChart.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $NumExtra = Elm.NumExtra.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var inits = A2($List.foldr,
   F2(function (e,acc) {    return A2($List._op["::"],_U.list([]),A2($List.map,F2(function (x,y) {    return A2($List._op["::"],x,y);})(e),acc));}),
   _U.list([_U.list([])]));
   var Angle = F2(function (a,b) {    return {ctor: "Angle",_0: a,_1: b};});
   var NineOClock = {ctor: "NineOClock"};
   var SixOClock = {ctor: "SixOClock"};
   var ThreeOClock = {ctor: "ThreeOClock"};
   var TwelveOClock = {ctor: "TwelveOClock"};
   var Counterclockwise = {ctor: "Counterclockwise"};
   var elmSpin = {ctor: "_Tuple2",_0: ThreeOClock,_1: Counterclockwise};
   var Clockwise = {ctor: "Clockwise"};
   var pieSpin = {ctor: "_Tuple2",_0: TwelveOClock,_1: Clockwise};
   var minCircleSegments = 60;
   var radius = 1;
   var wedge = F3(function (aStart,aOff,amt) {
      var angs = A2($List.map,function (i) {    return aStart + $Basics.toFloat(i) * aOff;},_U.range(0,amt));
      return $Graphics$Collage.polygon(A2($List._op["::"],{ctor: "_Tuple2",_0: 0,_1: 0},A2($List.map,A2($Basics.curry,$Basics.fromPolar,radius),angs)));
   });
   var pieChart = F2(function (amounts,clrs) {
      var total = A2($Basics.max,$List.sum(amounts),minCircleSegments);
      var amounts$ = A2($List.map,F2(function (x,y) {    return x * y;})(A2($NumExtra.divRound,total,$List.sum(amounts))),amounts);
      var accAmts = A2($List.map,$List.sum,inits(amounts$));
      var lilAng = $Basics.turns(1 / $Basics.toFloat(total));
      var wedgeForm = F3(function (accAmt,amt,clr) {    return A2($Graphics$Collage.filled,clr,A3(wedge,lilAng * $Basics.toFloat(accAmt),lilAng,amt));});
      return $Graphics$Collage.group(A4($List.map3,wedgeForm,accAmts,amounts$,clrs));
   });
   var pctPieChart = F2(function (_p1,_p0) {
      var _p2 = _p1;
      var _p4 = _p2._0;
      var _p3 = _p0;
      return A2(pieChart,_U.list([_p4,_p2._1 - _p4]),_U.list([_p3._0,_p3._1]));
   });
   return _elm.PieChart.values = {_op: _op
                                 ,pieChart: pieChart
                                 ,wedge: wedge
                                 ,radius: radius
                                 ,minCircleSegments: minCircleSegments
                                 ,Clockwise: Clockwise
                                 ,Counterclockwise: Counterclockwise
                                 ,TwelveOClock: TwelveOClock
                                 ,ThreeOClock: ThreeOClock
                                 ,SixOClock: SixOClock
                                 ,NineOClock: NineOClock
                                 ,elmSpin: elmSpin
                                 ,pieSpin: pieSpin
                                 ,Angle: Angle
                                 ,pctPieChart: pctPieChart
                                 ,inits: inits};
};